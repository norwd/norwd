---

name: "Go"
run-name: "Go workflow started by @${{ github.actor }}"
permissions: read-all

on:
  push:

jobs:

  analyse:
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    steps:
      - uses: actions/checkout@v3
      - uses: github/codeql-action/init@v2
        with:
          languages: go
          queries: +security-extended,security-and-quality

      - uses: github/codeql-action/autobuild@v2
      - uses: github/codeql-action/analyze@v2
        with:
          category: "/language:go"

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: '^1'

      - uses: Jerome1337/golint-action@v1.0.2
        with:
          golint-path: '.'

  vet:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: '^1'

      - run: go vet

  test:
    strategy:
      fail-fast: false
      matrix:
        os: ['ubuntu-latest', 'macos-latest', 'windows-latest']
        go:
          - '^1'

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go }}

      - run: go build -v ./...
      - run: go test -race -covermode atomic -coverprofile "cover.out" -v ./...

      - if: matrix.go == '^1'
        env:
          COVERALLS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          go install github.com/mattn/goveralls@latest
          goveralls -coverprofile "cover.out" -service github

  # https://github.com/norwd/pword/issues/61#issuecomment-1289895789
  test-status:
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - if: ${{ !(contains(needs.*.result, 'failure')) }}
        run: exit 0
      - if: ${{ contains(needs.*.result, 'failure') }}
        run: exit 1

  fmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.AUTO_GO_FMT_PWORD || secrets.GITHUB_TOKEN }}
          ref: ${{ github.ref }}

      - uses: actions/setup-go@v3
        with:
          go-version: '^1'

      - run: |
          gofmt -l -w -s .
          go install golang.org/x/tools/cmd/goimports@latest
          goimports -w .

      - uses: crazy-max/ghaction-import-gpg@v5
        with:
          gpg_private_key: ${{ secrets.AUTO_COMMIT_GPG_PRIVATE_KEY_PWORD }}
          passphrase: ${{ secrets.AUTO_COMMIT_GPG_PASSPHRASE_PWORD }}
          git_user_signingkey: true
          git_commit_gpgsign: true

      - if: github.ref != 'refs/heads/main'
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_author: norwd <106889957+norwd@users.noreply.github.com>
          commit_user_name: norwd
          commit_user_email: 106889957+norwd@users.noreply.github.com
          commit_message: Auto go-fmt
          commit_options: -s -S

  report:
    runs-on: ubuntu-latest
    steps:
      - if: github.ref == 'refs/heads/main'
        uses: creekorful/goreportcard-action@v1.0
