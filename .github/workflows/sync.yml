---

name: "Syncing Forks"
run-name: "Syncing Forks"
permissions: {}

concurrency:
  group: sync-forks
  cancel-in-progress: false

defaults:
  run:
    shell: bash

on:
  workflow_dispatch:
  push: {paths: [.github/workflows/sync.yml]}
  schedule:
    - cron: "0 * * * *"

env:
  GH_TOKEN: ${{ secrets.SYNC_FORKS_NORWD }}
  REPO_OWNER: ${{ github.repository_owner }}

jobs:
  list:
    name: "List Forks"
    runs-on: ubuntu-latest
    outputs:
      json: ${{ steps.list.outputs.json }}
    steps:
      - id: list
        name: "List Forks"
        run: gh repo list "${REPO_OWNER}" --fork --no-archived --limit 1000 --json "${JQ_PROPS}" --jq "${JQ_QUERY}" | tee -a "${GITHUB_OUTPUT}"
        env:
          JQ_PROPS: 'nameWithOwner,parent,pushedAt'
          JQ_QUERY: '"json=" + ([ sort_by(.pushedAt)[:256][] | { fork: .nameWithOwner, source: (.parent.owner.login + "/" + .parent.name) } ] | tostring)'

  sync:
    name: "Sync Forks"
    runs-on: ubuntu-latest
    needs: list
    continue-on-error: true
    strategy:
      fail-fast: false
      max-parallel: 1
      matrix:
        include: ${{ fromJSON(needs.list.outputs.json) }}
    env:
      SECONDS: 20 # seconds to wait to prevent rate limiting with so many other jobs going
      FORK: ${{ matrix.fork }}
      SOURCE: ${{ matrix.source }}
    steps:
      - name: "Wait a while"
        run: sleep "${SECONDS}"

      - id: source
        name: "Get info about ${{ matrix.source }}"
        run: gh repo view "${SOURCE}" --json "${JQ_PROPS}" | tee -a "${GITHUB_OUTPUT}"
        env:
          JQ_PROPS: 'defaultBranchRef'
          JQ_QUERY: '"default_branch=" + (.defaultBranchRef.name | tostring)'

      - name: "Wait a while"
        run: sleep "${SECONDS}"

      - name: "Sync ${{ matrix.fork }} from ${{ matrix.source }}"
        run: gh repo sync "${FORK}" --branch "${BRANCH}" --source "${SOURCE}"
        env:
          BRANCH: ${{ steps.source.outputs.default_branch }}
